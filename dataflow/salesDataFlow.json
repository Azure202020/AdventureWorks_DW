{
	"name": "salesDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "SalesData"
				}
			],
			"sinks": [
				{
					"name": "sink2"
				},
				{
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "Union1"
				}
			],
			"script": "parameters{\n\tfileName as string ('SalesAUS_2020_MAY_01.csv')\n}\nsource(output(\n\t\tsaleDate as string,\n\t\tsalesItem as string,\n\t\tcountry as string,\n\t\tqunatity as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:[(concat('GlobalSales/', $fileName))]) ~> SalesData\nConditionalSplit1@BadDate derive(FileName = $fileName) ~> DerivedColumn1\nSalesData split(isNull(toDate(saleDate,'dd-MMM-yyyy')),\n\tiif(length(salesItem)<7, true(), false()),\n\tdisjoint: false) ~> ConditionalSplit1@(BadDate, BadSalesItem, GoodRows)\nConditionalSplit1@GoodRows derive(saleDate = toDate(saleDate, 'dd-MMM-yyyy'),\n\t\tFileName = $fileName) ~> DerivedColumn2\nConditionalSplit1@BadSalesItem derive(FileName = $fileName) ~> DerivedColumn3\nDerivedColumn1, DerivedColumn3 union(byName: true)~> Union1\nDerivedColumn2 sink(mapColumn(\n\t\tsaleDate,\n\t\tsalesItem,\n\t\tcountry,\n\t\tqunatity,\n\t\tfileName = FileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nUnion1 sink(mapColumn(\n\t\tsaleDate,\n\t\tsalesItem,\n\t\tcountry,\n\t\tquantity = qunatity,\n\t\tfileName = FileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3"
		}
	}
}